coverage:
  all_nodes: 0
  covered_nodes: 0
mutation_score: 78.57142857142857
mutations:
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C842946888>\nsource = 'x = 1'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n>       generated\
    \ = to_source(node)\n\nsrc\\tests\\astmonkeytests\\test_visitors.py:392: \n_ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\
    visitors:135: in to_source\n    ???\n..\\..\\..\\..\\Documents\\Software\\Anaconda\\\
    lib\\ast.py:271: in visit\n    return visitor(node)\nvisitors:167: in generic_visit\n\
    \    ???\nvisitors:178: in _process_body\n    ???\n..\\..\\..\\..\\Documents\\\
    Software\\Anaconda\\lib\\ast.py:271: in visit\n    return visitor(node)\n_ _ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n\
    self = <visitors.FixLinenoNodeVisitor object at 0x000001C842935D08>\nnode = <_ast.Assign\
    \ object at 0x000001C842935648>\n\n>   ???\nE   AttributeError: 'Assign' object\
    \ has no attribute 'body'\n\nvisitors:166: AttributeError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[x
    = 1]
  module: &id001
  mutations:
  - lineno: 166
    operator: LCR
  number: 1
  status: killed
  tests_run: 6
  time: 0.3674583435058594
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C843AA5088>\nsource = 'x = 1'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n>       generated\
    \ = to_source(node)\n\nsrc\\tests\\astmonkeytests\\test_visitors.py:392: \n_ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\
    visitors:137: in to_source\n    ???\nvisitors:346: in visit\n    ???\nvisitors:244:\
    \ in correct_line_number\n    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'visitors.SourceGeneratorNodeVisitorPython36'>\n\
    node = <_ast.Module object at 0x000001C843A96E88>, arg_name = 'lineno'\n\n>  \
    \ ???\nE   AttributeError: 'Module' object has no attribute 'lineno'\n\nvisitors:194:\
    \ AttributeError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[x
    = 1]
  module: *id001
  mutations:
  - lineno: 194
    operator: LCR
  number: 2
  status: killed
  tests_run: 6
  time: 0.37172818183898926
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C843CA5688>\nsource = 'def f():\\n    yield'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n>       generated\
    \ = to_source(node)\n\nsrc\\tests\\astmonkeytests\\test_visitors.py:392: \n_ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\
    visitors:137: in to_source\n    ???\nvisitors:347: in visit\n    ???\n..\\..\\\
    ..\\..\\Documents\\Software\\Anaconda\\lib\\ast.py:271: in visit\n    return visitor(node)\n\
    visitors:352: in visit_Module\n    ???\nvisitors:272: in body\n    ???\nvisitors:347:\
    \ in visit\n    ???\n..\\..\\..\\..\\Documents\\Software\\Anaconda\\lib\\ast.py:271:\
    \ in visit\n    return visitor(node)\nvisitors:884: in visit_FunctionDef\n   \
    \ ???\nvisitors:271: in body\n    ???\nvisitors:251: in correct_line_number\n\
    \    ???\nvisitors:254: in add_missing_lines\n    ???\nvisitors:222: in _newline_needed\n\
    \    ???\nvisitors:203: in _get_actual_lineno\n    ???\n_ _ _ _ _ _ _ _ _ _ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nnode = <_ast.Expr\
    \ object at 0x000001C843CA5848>\n\n>   ???\nE   AttributeError: 'Yield' object\
    \ has no attribute 's'\n\nvisitors:213: AttributeError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[def
    f():\n    yield]
  module: *id001
  mutations:
  - lineno: 202
    operator: LCR
  number: 3
  status: killed
  tests_run: 29
  time: 0.39183473587036133
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C843E64808>\nsource = 'x = 1'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n>       generated\
    \ = to_source(node)\n\nsrc\\tests\\astmonkeytests\\test_visitors.py:392: \n_ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\
    visitors:137: in to_source\n    ???\nvisitors:346: in visit\n    ???\nvisitors:251:\
    \ in correct_line_number\n    ???\nvisitors:254: in add_missing_lines\n    ???\n\
    visitors:222: in _newline_needed\n    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'visitors.SourceGeneratorNodeVisitorPython36'>\n\
    node = <_ast.Module object at 0x000001C843E4F388>\n\n>   ???\nE   AttributeError:\
    \ 'Module' object has no attribute 'lineno'\n\nvisitors:206: AttributeError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[x
    = 1]
  module: *id001
  mutations:
  - lineno: 244
    operator: LCR
  number: 4
  status: killed
  tests_run: 6
  time: 0.3514847755432129
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C843A82748>\nsource = 'x = 1'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n        generated\
    \ = to_source(node)\n>       assert source == generated\nE       AssertionError\n\
    \nsrc\\tests\\astmonkeytests\\test_visitors.py:393: AssertionError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[x
    = 1]
  module: *id001
  mutations:
  - lineno: 258
    operator: LCR
  number: 5
  status: killed
  tests_run: 6
  time: 0.3754997253417969
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C844183788>\nsource = 'def f():\\n    pass'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n        generated\
    \ = to_source(node)\n>       assert source == generated\nE       AssertionError\n\
    \nsrc\\tests\\astmonkeytests\\test_visitors.py:393: AssertionError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[def
    f():\n    pass0]
  module: *id001
  mutations:
  - lineno: 321
    operator: LCR
  number: 6
  status: killed
  tests_run: 19
  time: 0.37534546852111816
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C8443B7988>\nsource = 'from x import y'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n        generated\
    \ = to_source(node)\n>       assert source == generated\nE       AssertionError\n\
    \nsrc\\tests\\astmonkeytests\\test_visitors.py:393: AssertionError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[from
    x import y]
  module: *id001
  mutations:
  - lineno: 377
    operator: LCR
  number: 7
  status: killed
  tests_run: 35
  time: 0.3794829845428467
- exception_traceback: null
  killer: null
  module: *id001
  mutations:
  - lineno: 433
    operator: LCR
  number: 8
  status: survived
  tests_run: 316
  time: 0.8070113658905029
- exception_traceback: null
  killer: null
  module: *id001
  mutations:
  - lineno: 433
    operator: LCR
  number: 9
  status: survived
  tests_run: 316
  time: 0.766930341720581
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C844889D08>\nsource = 'if x:\\n    pass\\nelse:\\n    pass'\n\n \
    \   @pytest.mark.parametrize(\"source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self,\
    \ source):\n        \"\"\"Check if converting code into AST and converting it\
    \ back to code yields the same code.\"\"\"\n        node = ast.parse(source)\n\
    >       generated = to_source(node)\n\nsrc\\tests\\astmonkeytests\\test_visitors.py:392:\
    \ \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\
    \ _ _ _\nvisitors:137: in to_source\n    ???\nvisitors:347: in visit\n    ???\n\
    ..\\..\\..\\..\\Documents\\Software\\Anaconda\\lib\\ast.py:271: in visit\n   \
    \ return visitor(node)\nvisitors:352: in visit_Module\n    ???\nvisitors:272:\
    \ in body\n    ???\nvisitors:347: in visit\n    ???\n..\\..\\..\\..\\Documents\\\
    Software\\Anaconda\\lib\\ast.py:271: in visit\n    return visitor(node)\nvisitors:437:\
    \ in visit_If\n    ???\nvisitors:449: in if_elif\n    ???\nvisitors:453: in if_or_else\n\
    \    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\
    \ _ _ _ _ _ _\n\nself = <visitors.SourceGeneratorNodeVisitorPython36 object at\
    \ 0x000001C844986E08>\nnode = <_ast.Pass object at 0x000001C84498B0C8>, use_elif\
    \ = True\n\n>   ???\nE   AttributeError: 'Pass' object has no attribute 'test'\n\
    \nvisitors:445: AttributeError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[if
    x:\n    pass\nelse:\n    pass]
  module: *id001
  mutations:
  - lineno: 452
    operator: LCR
  number: 10
  status: killed
  tests_run: 53
  time: 0.4187333583831787
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C843F92708>\nsource = 'not x'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n        generated\
    \ = to_source(node)\n>       assert source == generated\nE       AssertionError\n\
    \nsrc\\tests\\astmonkeytests\\test_visitors.py:393: AssertionError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[not
    x]
  module: *id001
  mutations:
  - lineno: 674
    operator: LCR
  number: 11
  status: killed
  tests_run: 44
  time: 0.4326210021972656
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C844D299C8>\nsource = 'x[y:z:q]'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n        generated\
    \ = to_source(node)\n>       assert source == generated\nE       AssertionError\n\
    \nsrc\\tests\\astmonkeytests\\test_visitors.py:393: AssertionError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[x[y:z:q]]
  module: *id001
  mutations:
  - lineno: 692
    operator: LCR
  number: 12
  status: killed
  tests_run: 88
  time: 0.45208120346069336
- exception_traceback: null
  killer: null
  module: *id001
  mutations:
  - lineno: 837
    operator: LCR
  number: 13
  status: survived
  tests_run: 316
  time: 0.7550837993621826
- exception_traceback: null
  killer: null
  module: *id001
  mutations:
  - lineno: 871
    operator: LCR
  number: 14
  status: incompetent
  tests_run: 16
  time: 0.3754749298095703
- exception_traceback: "self = <test_visitors.TestSourceGeneratorNodeVisitor object\
    \ at 0x000001C844F1FDC8>\nsource = 'class Sample:\\n    pass'\n\n    @pytest.mark.parametrize(\"\
    source\", roundtrip_testdata)\n    def test_codegen_roundtrip(self, source):\n\
    \        \"\"\"Check if converting code into AST and converting it back to code\
    \ yields the same code.\"\"\"\n        node = ast.parse(source)\n        generated\
    \ = to_source(node)\n>       assert source == generated\nE       AssertionError\n\
    \nsrc\\tests\\astmonkeytests\\test_visitors.py:393: AssertionError"
  killer: src/tests/astmonkeytests/test_visitors.py::TestSourceGeneratorNodeVisitor::test_codegen_roundtrip[class
    Sample:\n    pass]
  module: *id001
  mutations:
  - lineno: 871
    operator: LCR
  number: 15
  status: killed
  tests_run: 16
  time: 0.4233834743499756
number_of_tests: 316
targets:
- src/astmonkey/visitors.py
tests:
- name: test_visitors
  target: null
  time: 1.424217939376831
time_stats:
  create_mutant_module: 0.06817221641540527
  create_target_ast: 0.03200793266296387
  mutate_module: 7.3003246784210205
  run_tests_with_mutant: 7.0481579303741455
total_time: 8.728905439376831
